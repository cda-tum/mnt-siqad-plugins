name: macOS CI

on:
  push:
    branches: [ 'main' ]
    paths:
      - '**/*.hpp'
      - '**/*.cpp'
      - '**/*.cmake'
      - '**/CMakeLists.txt'
      - 'libs/**'
      - '.github/workflows/macos.yml'
  pull_request:
    branches: [ 'main' ]
    paths:
      - '**/*.hpp'
      - '**/*.cpp'
      - '**/*.cmake'
      - '**/CMakeLists.txt'
      - 'libs/**'
      - '.github/workflows/macos.yml'
  merge_group:

defaults:
  run:
    shell: bash

jobs:
  build_and_test:
    strategy:
      matrix:
        os: [ macos-11, macos-12 ]
        compiler: [ g++-11, g++-12, clang++ ]
        build_type: [ Debug, Release ]
        include:
          - compiler: clang++
            ccompiler: clang
          - compiler: g++-11
            ccompiler: gcc-11
          - compiler: g++-12
            ccompiler: gcc-12
          - os: macos-11
            compiler: g++-10
            ccompiler: gcc-10
            build_type: Debug
          - os: macos-11
            compiler: g++-10
            ccompiler: gcc-10
            build_type: Release

    name: ${{matrix.os}} with ${{matrix.compiler}} (${{matrix.build_type}} mode)
    runs-on: ${{matrix.os}}

    steps:

      - name: Install Homebrew
        run: >
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

      - name: Install Libraries
        run: >
          brew update &&
          brew install boost tbb

      - name: Clone Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      # Use XCode 13.2 as a workaround because XCode 14.0 seems broken
      - name: Setup XCode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "^13.2"

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: '${{matrix.os}}-${{matrix.compiler}}-${{matrix.build_type}}'
          variant: ccache
          save: true
          max-size: 10G

      - name: Create Build Environment
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Configure CMake
        working-directory: ${{github.workspace}}/build
        run: >
          cmake ${{github.workspace}}
          -DCMAKE_CXX_COMPILER=${{matrix.compiler}}
          -DCMAKE_BUILD_TYPE=${{matrix.build_type}}
          -DQUICKSIM_TEST=ON
     

      - name: Build quicksim-siqad-plugin
        working-directory: ${{github.workspace}}/build
        run: cmake --build . --config ${{matrix.build_type}} -j3  # macOS runners provide 3 cores

      - name: Test
        working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C ${{matrix.build_type}} --verbose
