name: macOS CI

on:
  push:
    branches: [ 'main' ]
    paths:
      - '**/*.hpp'
      - '**/*.cpp'
      - '**/*.cmake'
      - '**/CMakeLists.txt'
      - 'libs/**'
      - '.github/workflows/macos.yml'
  pull_request:
    branches: [ 'main' ]
    paths:
      - '**/*.hpp'
      - '**/*.cpp'
      - '**/*.cmake'
      - '**/CMakeLists.txt'
      - 'libs/**'
      - '.github/workflows/macos.yml'
  merge_group:

defaults:
  run:
    shell: bash

jobs:
  build_and_test:
    strategy:
      matrix:
        os: [ macos-12, macos-13 ]
        compiler: [ g++-11, g++-12, g++-13 ]
        build_type: [ Debug, Release ]
        include:
          - os: macos-12
            compiler: g++-11
          - os: macos-12
            compiler: g++-12
          - os: macos-12
            compiler: g++-13
          - os: macos-12
            compiler: clang++
          - os: macos-13
            compiler: g++-11
          - os: macos-13
            compiler: g++-12
          - os: macos-13
            compiler: g++-13
          - os: macos-13
            compiler: clang++
          - os: macos-14
            compiler: clang++


    name: ${{matrix.os}} with ${{matrix.compiler}} (${{matrix.build_type}} mode)
    runs-on: ${{matrix.os}}

    steps:

      - name: Install Homebrew
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

      - name: Install Boost
        run: |
          brew update &&
          brew unlink python && brew link --overwrite python@3.12
          brew install boost

      # TBB doesn't support macOS 11 anymore
      - if: matrix.os != 'macos-11'
        name: Install TBB
        run: |
          brew update &&
          brew install tbb

      - name: Clone Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup XCode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "^14.3"

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: '${{matrix.os}}-${{matrix.compiler}}-${{matrix.build_type}}'
          variant: ccache
          save: true
          max-size: 10G

      - name: Create Build Environment
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Configure CMake
        working-directory: ${{github.workspace}}/build
        run: >
          cmake ${{github.workspace}}
          -DCMAKE_CXX_COMPILER=${{matrix.compiler}}
          -DCMAKE_BUILD_TYPE=${{matrix.build_type}}
          -DCDA_TUM_SIQAD_PLUGINS_TEST=ON

      - name: Build cda-tum-siqad-plugins
        working-directory: ${{github.workspace}}/build
        run: cmake --build . --config ${{matrix.build_type}} -j3  # macOS runners provide 3 cores

      - name: Test
        working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C ${{matrix.build_type}} --verbose
