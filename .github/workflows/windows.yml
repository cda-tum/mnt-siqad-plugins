name: Windows CI

on:
  push:
    branches: [ 'main' ]
    paths:
      - '**/*.hpp'
      - '**/*.cpp'
      - '**/*.cmake'
      - '**/CMakeLists.txt'
      - 'libs/**'
      - '.github/workflows/windows.yml'
  pull_request:
    branches: [ 'main' ]
    paths:
      - '**/*.hpp'
      - '**/*.cpp'
      - '**/*.cmake'
      - '**/CMakeLists.txt'
      - 'libs/**'
      - '.github/workflows/windows.yml'
    merge_group:

jobs:
  build_and_test:
    strategy:
      matrix:
        os: [ windows-2019, windows-2022 ]
        toolset: [ v142, v143, ClangCL ]
        build_type: [ Debug, Release ]
        include:
          - os: windows-2019
            env: 'Visual Studio 16 2019'
            boost_platform: 2019
          - os: windows-2022
            env: 'Visual Studio 17 2022'
            boost_platform: 2022
        exclude:
          - os: windows-2019
            toolset: v143
          - os: windows-2022
            toolset: v142

    name: ${{matrix.os}} with ${{matrix.env}} and ${{matrix.toolset}} toolset (${{matrix.build_type}} mode)
    runs-on: ${{matrix.os}}

    steps:
      - name: Clone Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.x'

      - name: Install Boost
        uses: MarkusJx/install-boost@v2.5.0
        id: install-boost
        with:
          boost_version: 1.80.0
          platform_version: ${{matrix.boost_platform}}
          cache: true
          toolset: msvc
          arch: x86

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: '${{matrix.os}}-${{matrix.toolset}}-${{matrix.build_type}}'
          variant: ccache
          save: true
          max-size: 10G

      - name: Create Build Environment
        run: cmake -E make_directory ${{github.workspace}}\build

      - name: Configure CMake
        working-directory: ${{github.workspace}}\build
        run: >
          cmake ${{github.workspace}} -G "${{matrix.env}}" -A x64 -T ${{matrix.toolset}}
          -DCMAKE_CXX_COMPILER=${{matrix.compiler}}
          -DCMAKE_BUILD_TYPE=${{matrix.build_type}}
          -DFICTION_ENABLE_UNITY_BUILD=ON
          -DFICTION_ENABLE_PCH=ON
          -DFICTION_CLI=ON
          -DFICTION_TEST=ON
          -DFICTION_BENCHMARK=OFF
          -DFICTION_EXPERIMENTS=ON
          -DFICTION_Z3=OFF
          -DFICTION_ALGLIB=ON
          -DFICTION_PROGRESS_BARS=OFF
          -DFICTION_WARNINGS_AS_ERRORS=OFF
          -DMOCKTURTLE_EXAMPLES=OFF
        env:
          BOOST_ROOT: ${{steps.install-boost.outputs.BOOST_ROOT}}

      - name: Build cda-tum-siqad-plugins
        working-directory: ${{github.workspace}}\build
        run: cmake --build . --config ${{matrix.build_type}} -j2

      - name: Test
        working-directory: ${{github.workspace}}\build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C ${{matrix.build_type}} --verbose
